<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Minecraft-Style Coordinates</title>
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places&callback=initMap" async defer></script>
    <style>
        #map { height: 400px; width: 100%; margin-bottom: 10px; }
        input, button { margin: 5px; padding: 8px; font-size: 16px; }
    </style>
</head>
<body>
    <h2>Set Your Birth City & Find Your Coordinates</h2>

    <label for="search">Search for your birth city:</label>
    <input id="search" type="text" placeholder="Type city name..." autocomplete="off">
    <div id="map"></div>

    <label for="altitude">Set Altitude (Y-coordinate):</label>
    <input type="number" id="altitude" value="64">

    <button onclick="calculateCoordinates()">Get Coordinates</button>
    <p id="result"></p>

    <script>
        let birthLat = null, birthLon = null;
        let map, marker, autocomplete;

        function initMap() {
            const savedLat = localStorage.getItem("birthLat");
            const savedLon = localStorage.getItem("birthLon");

            const defaultLocation = savedLat && savedLon ? { lat: parseFloat(savedLat), lng: parseFloat(savedLon) } : { lat: 20, lng: 0 };

            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 3,
                center: defaultLocation
            });

            marker = new google.maps.Marker({
                position: defaultLocation,
                map: map,
                draggable: true
            });

            if (savedLat && savedLon) {
                birthLat = parseFloat(savedLat);
                birthLon = parseFloat(savedLon);
            }

            google.maps.event.addListener(map, 'click', function(event) {
                marker.setPosition(event.latLng);
                birthLat = event.latLng.lat();
                birthLon = event.latLng.lng();
                saveBirthCity();
            });

            autocomplete = new google.maps.places.Autocomplete(document.getElementById("search"));
            autocomplete.addListener("place_changed", function() {
                const place = autocomplete.getPlace();
                if (!place.geometry) return;
                birthLat = place.geometry.location.lat();
                birthLon = place.geometry.location.lng();
                marker.setPosition(place.geometry.location);
                map.setCenter(place.geometry.location);
                saveBirthCity();
            });
        }

        function saveBirthCity() {
            localStorage.setItem("birthLat", birthLat);
            localStorage.setItem("birthLon", birthLon);
        }

        function calculateCoordinates() {
            if (birthLat === null || birthLon === null) {
                document.getElementById("result").innerText = "Please select your birth city.";
                return;
            }

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    const currentLat = position.coords.latitude;
                    const currentLon = position.coords.longitude;
                    const y = parseInt(document.getElementById("altitude").value) || 64;

                    const x = Math.round((currentLon - birthLon) * 111320);
                    const z = Math.round((birthLat - currentLat) * 110540);

                    document.getElementById("result").innerText = `Your coordinates relative to your birth city: (${x}, ${y}, ${z})`;
                }, () => {
                    document.getElementById("result").innerText = "Unable to retrieve your location.";
                });
            } else {
                document.getElementById("result").innerText = "Geolocation is not supported by your browser.";
            }
        }
    </script>
</body>
</html>
